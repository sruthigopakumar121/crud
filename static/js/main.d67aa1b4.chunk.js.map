{"version":3,"sources":["Component/Crud.js","App.js","reportWebVitals.js","index.js"],"names":["Crud","useState","input","setInput","newlist","localStorage","getItem","JSON","parse","getLocalData","list","setList","toggle","setToggle","editId","setEditId","addItem","map","ele","newindex","alert","useEffect","setItem","stringify","className","placeholder","value","onChange","e","target","onClick","index","editedItem","find","console","log","editItem","updatedItem","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAuGeA,MA5Ff,WACA,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAXL,WACf,IAAMG,EAAQC,aAAaC,QAAQ,YACnC,OAAGF,EACQG,KAAKC,MAAMJ,GAGZ,GAKmBK,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BV,oBAAS,GAArC,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAA4BZ,mBAAS,IAArC,mBAAOa,EAAP,KAAeC,EAAf,KACMC,EAAQ,WACNd,EAGIA,GAASU,GAEbD,EAAQD,EAAKO,KAAI,SAACC,EAAKC,GACnB,OAAIA,IAAaL,EAEN,CAACZ,GAGLgB,MAGXf,EAAS,IACTY,EAAU,MACVF,GAAU,KAGVF,EAAQ,GAAD,mBAAKD,GAAL,CAAUR,KACjBC,EAAS,KAnBTiB,MAAM,2BAgDV,OAHJC,qBAAU,WACNhB,aAAaiB,QAAQ,WAAWf,KAAKgB,UAAUb,MAChD,CAACA,IAEI,sBAAKc,UAAU,WAAf,UACI,gDACI,sBAAKA,UAAU,WAAf,UACI,uBAAOC,YAAY,iBAAiBC,MAAOxB,EAAOyB,SAAU,SAACC,GAAD,OAAMzB,EAASyB,EAAEC,OAAOH,UAC1E,GAARd,EACF,mBAAGY,UAAU,qBAAqBM,QAASd,IACzC,mBAAGQ,UAAU,aAAaM,QAASd,OAKrC,qBAAKQ,UAAU,YAAf,SACKd,EAAKO,KAAI,SAACC,EAAIa,GACX,OACC,sBAAKP,UAAU,WAAf,UACI,mCAAMN,KACR,sBAAKM,UAAU,WAAf,UACC,mBAAGA,UAAU,aAAaM,QAAS,kBAlClD,SAACC,GACd,IAAMC,EAAatB,EAAKuB,MAAK,SAACf,EAAIC,GAE9B,OAAQA,IAAaY,KAIzB5B,EAAS6B,GACTE,QAAQC,IAAIjC,GACZa,EAAUgB,GACVlB,GAAU,GAwByDuB,CAASL,MAChD,mBAAGP,UAAU,cAAcM,QAAS,kBA3CnD,SAACC,GACd,IAAMM,EAAY3B,EAAK4B,QAAO,SAACpB,EAAIC,GAC/B,OAAOA,IAAYY,KAGvBpB,EAAQ0B,GAsC4DE,CAAWR,WAJvBA,QAYxC,qBAAKP,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAc,oBAAkB,aAAaM,QAAS,WAAKnB,EAAQ,KAArF,SAA2F,qDClFpG6B,MARf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d67aa1b4.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport \"./Crud.css\"\r\nconst getLocalData=()=>{\r\n    const newlist=localStorage.getItem(\"fulllist\");\r\n    if(newlist){\r\n        return JSON.parse(newlist);\r\n    }\r\n    else{\r\n        return[];\r\n    }\r\n}\r\nfunction Crud() {\r\nconst [input, setInput] = useState(\"\");\r\nconst [list, setList] = useState(getLocalData());\r\nconst [toggle, setToggle] = useState(false);\r\nconst [editId, setEditId] = useState(\"\");\r\nconst addItem=()=>{\r\n    if(!input){\r\n        alert(\"Please fill the data !\");\r\n    }\r\n    else if(input && toggle){\r\n        \r\n        setList(list.map((ele, newindex)=>{\r\n            if (newindex === editId){ \r\n\r\n                return [input];\r\n                console.log(input);\r\n            }\r\n            return ele;\r\n        }\r\n        )); \r\n        setInput(\"\");\r\n        setEditId(null);\r\n        setToggle(false);  \r\n    }\r\n    else{\r\n        setList([...list,input]);\r\n        setInput('');\r\n    }\r\n\r\n}\r\n\r\nconst deleteItem=(index)=>{\r\n    const updatedItem=list.filter((ele,newindex)=>{\r\n        return(newindex !==index)\r\n\r\n    });\r\n    setList(updatedItem);\r\n\r\n}\r\nconst editItem = (index)=>{\r\n    const editedItem = list.find((ele,newindex)=>{\r\n        \r\n        return( newindex === index)\r\n    \r\n    });\r\n   \r\n    setInput(editedItem);\r\n    console.log(input); \r\n    setEditId(index);\r\n    setToggle(true);\r\n}\r\n\r\nuseEffect(() => {\r\n    localStorage.setItem(\"fulllist\",JSON.stringify(list));\r\n}, [list])\r\n    return (\r\n        <div className=\"main-div\">\r\n            <h1>CRUD OPERATION</h1>\r\n                <div className=\"addItems\">\r\n                    <input placeholder=\"enter the data\" value={input} onChange={(e)=> setInput(e.target.value)}></input>\r\n                    {(toggle==false)?\r\n                    <i className=\"fa fa-plus add-btn\" onClick={addItem}></i> :\r\n                      <i className=\"fa fa-edit\" onClick={addItem}></i>  \r\n                    }\r\n\r\n                </div>\r\n                \r\n                    <div className=\"showItems\">\r\n                        {list.map((ele,index)=>{\r\n                            return (\r\n                             <div className=\"eachItem\" key={index}>\r\n                                 <h3> {ele}</h3>\r\n                               <div className=\"crud-btn\">\r\n                                <i className=\"fa fa-edit\" onClick={()=>editItem(index)}></i>\r\n                                <i className=\"fa fa-trash\" onClick={()=>deleteItem(index)}></i>\r\n                               </div>  \r\n                             </div>\r\n\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\"data-sm-link-text=\"Delete All\" onClick={()=>{setList([])}}><span>Full List</span></button>\r\n                    </div>     \r\n\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Crud\r\n","\nimport './App.css';\nimport Crud from './Component/Crud';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Crud/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}